# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/checkout@master

      - name: Install poetry
        run: pip install poetry

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run pytest
        shell: bash
        run: poetry run python -m pytest -p no:sugar -q tests/

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/checkout@master

      - name: Install poetry
        run: pip install poetry

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Update version
        shell: bash
        run: poetry version "${GITHUB_REF##*/v}"

      - name: Build package
        shell: bash
        run: poetry build -n

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'

      - name: Publish to PyPI
        shell: bash
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
         poetry config http-basic.pypi "__token__" "$POETRY_PYPI_TOKEN_PYPI"
         poetry publish

      - name: push
        uses: actions-x/commit@v2
        with:
          files: pyproject.toml
          force: true

